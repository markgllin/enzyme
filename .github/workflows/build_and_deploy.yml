name: Build & Deploy Image

on:
  push:
    branches: [ main ]

  workflow_dispatch:

env:
  AWS_REGION: us-west-1
  TF_VERSION: 1.1.9

jobs:

  deploy:

    runs-on: ubuntu-latest

    steps:
    - name: "Checkout code"
      uses: "actions/checkout@v2"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: "setup Terraform"
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}
        terraform_wrapper: false

    - name: Terraform Init
      id: init
      run: terraform -chdir=terraform init

    - name: Terraform Apply
      id: apply
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        terraform -chdir=terraform apply -no-color -auto-approve \
        -var="image_tag=${{ env.IMAGE_TAG }}"

    - name: Terraform state show
      id: state
      run: |
        echo "ECR_URL=$(terraform -chdir=terraform output --raw ecr_repo_url)" >> $GITHUB_ENV

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t ${{ env.ECR_URL }} .
        docker tag ${{ env.ECR_URL }} ${{ env.ECR_URL }}:$IMAGE_TAG
        docker push ${{ env.ECR_URL }}
        docker push ${{ env.ECR_URL }}:$IMAGE_TAG
